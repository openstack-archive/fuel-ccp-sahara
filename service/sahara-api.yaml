service:
  name: sahara-api
  ports:
    - {{ sahara_api_port }}
  containers:
    - name: sahara-api
      image: sahara-api
      # TODO(sreshetniak): add probes
      probes:
        readiness: "true"
        liveness: "true"
      pre:
        - name: sahara-db-create
          dependencies:
            - mariadb
          type: single
          command:
            mysql -u root -p{{ db_root_password }} -h {{ address("mariadb") }} -e "create database {{ sahara_db_name }};
            grant all privileges on {{ sahara_db_name }}.* to '{{ sahara_db_username }}'@'%' identified by '{{ sahara_db_password }}';"
        - name: sahara-db-sync
          files:
            - sahara-conf
          dependencies:
            - sahara-db-create
          type: single
          command: sahara-db-manage --config-file /etc/sahara/sahara.conf upgrade head
        - name: sahara-user-create
          dependencies:
            - keystone
          type: single
          command: openstack user create --domain default --password {{ sahara_password  }} {{ sahara_user }}
        - name: sahara-role-add
          dependencies:
            - sahara-user-create
          type: single
          command: openstack role add --project {{ openstack_project_name }} --user {{ sahara_user }} admin
        - name: sahara-service-create
          dependencies:
            - keystone
          type: single
          command: openstack service create --name sahara --description "OpenStack Data Processing service" data-processing
        - name: sahara-public-endpoint-create
          dependencies:
            - sahara-service-create
          type: single
          command: openstack endpoint create --region RegionOne data-processing public http://{{ address("sahara-api") }}:{{ sahara_api_port }}/v1.1/\$\(tenant_id\)s
        - name: sahara-internal-endpoint-create
          dependencies:
            - sahara-service-create
          type: single
          command: openstack endpoint create --region RegionOne data-processing internal http://{{ address("sahara-api") }}:{{ sahara_api_port }}/v1.1/\$\(tenant_id\)s
        - name: sahara-admin-endpoint-create
          dependencies:
            - sahara-service-create
          type: single
          command: openstack endpoint create --region RegionOne data-processing admin http://{{ address("sahara-api") }}:{{ sahara_api_port }}/v1.1/\$\(tenant_id\)s
      daemon:
        files:
          - sahara-conf
        dependencies:
          - rabbitmq
        command: sahara-api --config-file /etc/sahara/sahara.conf

files:
  sahara-conf:
    path: /etc/sahara/sahara.conf
    content: sahara.conf.j2
